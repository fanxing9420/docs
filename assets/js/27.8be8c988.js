(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{767:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git教程基础常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git教程基础常用命令"}},[t._v("#")]),t._v(" git教程基础常用命令")]),t._v(" "),a("img",{attrs:{src:"/docs/img/git/gitlogo.png"}}),t._v(" "),a("p",[t._v("版本管理工具一般具有如下特性:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1) 能够记录历史版本,回退历史版本\n2) 团队开发,方便代码合并\n")])])]),a("h2",{attrs:{id:"_1-版本管理工具介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-版本管理工具介绍"}},[t._v("#")]),t._v(" 1. 版本管理工具介绍")]),t._v(" "),a("p",[t._v("现在比较流行的版本管理工具是git ,但是实际上git 是近几年才发展起来的,可能有一些老的项目,还在用一些老的软件,比如svn")]),t._v(" "),a("h3",{attrs:{id:"_1-1版本管理发展简史-维基百科"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1版本管理发展简史-维基百科"}},[t._v("#")]),t._v(" 1.1版本管理发展简史(维基百科)")]),t._v(" "),a("p",[a("img",{attrs:{src:"/docs/img/git/1571983065236.png",alt:"1571983065236"}})]),t._v(" "),a("h4",{attrs:{id:"_1-1-1-svn-subversion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-svn-subversion"}},[t._v("#")]),t._v(" 1.1.1 SVN(SubVersion)")]),t._v(" "),a("p",[t._v("工作流程")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("SVN是集中式版本控制系统，版本库是集中放在中央服务器的.\n工作流程如下:\n\t1.从中央服务器远程仓库下载代码\n\t2.修改后将代码提交到中央服务器远程仓库\n")])])]),a("p",[t._v("优缺点:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" 优点: 简单,易操作\n 缺点:所有代码必须放在中央服务器  \n  \t   1.服务器一旦宕机无法提交代码,即容错性较差\n       2.离线无法提交代码,无法及时记录我们的提交行为\n")])])]),a("p",[t._v("svn流程图")]),t._v(" "),a("p",[a("img",{attrs:{src:"/docs/img/git/svn.jpg",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"_2-git-的安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-git-的安装"}},[t._v("#")]),t._v(" 2. Git 的安装")]),t._v(" "),a("h3",{attrs:{id:"_2-1-git-的下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-git-的下载"}},[t._v("#")]),t._v(" 2.1 git 的下载")]),t._v(" "),a("p",[t._v("下载地址： "),a("a",{attrs:{href:"https://git-scm.com/download",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://git-scm.com/download"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("img",{attrs:{src:"/docs/img/git/1571990833074.png",alt:"1571990833074"}})]),t._v(" "),a("h2",{attrs:{id:"_3-git-流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-git-流程"}},[t._v("#")]),t._v(" 3. git 流程")]),t._v(" "),a("h3",{attrs:{id:"_3-1-流程图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-流程图"}},[t._v("#")]),t._v(" 3.1 流程图")]),t._v(" "),a("p",[a("img",{attrs:{src:"/docs/img/git/git%E6%B5%81%E7%A8%8B.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_3-2-概念即详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-概念即详解"}},[t._v("#")]),t._v(" 3.2 概念即详解")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("本地仓库：是在开发人员自己电脑上的Git仓库,存放我们的代码(.git 隐藏文件夹就是我们的本地仓库)\t\t\n远程仓库：是在远程服务器上的Git仓库,存放代码(可以是github.com或者gitee.com 上的仓库,或者自己该公司的服务器)\n工作区: 我们自己写代码(文档)的地方\n暂存区: 在 本地仓库中的一个特殊的文件(index) 叫做暂存区,临时存储我们即将要提交的文件\n------------\nClone：克隆，就是将远程仓库复制到本地仓库\nPush：推送，就是将本地仓库代码上传到远程仓库\nPull：拉取，就是将远程仓库代码下载到本地仓库,并将代码 克隆到本地工作区\n")])])]),a("p",[a("img",{attrs:{src:"/docs/img/git/git%E6%B5%81%E7%A8%8B_%E8%AF%A6%E8%A7%A3.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"_4-命令行-git基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-命令行-git基本操作"}},[t._v("#")]),t._v(" 4.命令行-- git基本操作")]),t._v(" "),a("h3",{attrs:{id:"_4-1-介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-介绍"}},[t._v("#")]),t._v(" 4.1  介绍")]),t._v(" "),a("p",[t._v("​\t上述我们的操作 使用的 是客户端TortoiseGit 操作的git ,实际上底层依旧是使用的命令行帮我们执行, 在早期 git 并没有窗口化工具,开发人员只能使用命令行模式。")]),t._v(" "),a("h4",{attrs:{id:"环境配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境配置"}},[t._v("#")]),t._v(" 环境配置")]),t._v(" "),a("p",[t._v("当安装Git后首先要做的事情是设置用户名称和email地址。这是非常重要的，因为每次Git提交都会使用该用户信息")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置用户信息 ")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name “itcast”\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email “itcast@itcast.cn”\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看配置信息")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.name\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#通过上面的命令设置的信息会保存在~/.gitconfig文件中")]),t._v("\n\n")])])]),a("h4",{attrs:{id:"初始化本地仓库-init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化本地仓库-init"}},[t._v("#")]),t._v(" 初始化本地仓库 init")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化仓库带工作区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化仓库不带工作区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init --bare  \n")])])]),a("h4",{attrs:{id:"克隆-clone"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#克隆-clone"}},[t._v("#")]),t._v(" 克隆 clone")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从远程仓库克隆")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone 远程Git仓库地址 \n例如: "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://gitee.com/itcast/gittest.git\n")])])]),a("h4",{attrs:{id:"查看状态-status"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看状态-status"}},[t._v("#")]),t._v(" 查看状态 status")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看状态")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看状态 使输出信息更加简洁")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status –s \n")])])]),a("h4",{attrs:{id:"add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[t._v("#")]),t._v(" add")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将未跟踪的文件加入暂存区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("文件名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将暂存区的文件取消暂存 (取消 add )")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("文件名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  \n\n")])])]),a("h4",{attrs:{id:"commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commit"}},[t._v("#")]),t._v(" commit")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git commit 将暂存区的文件修改提交到本地仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"日志信息"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("文件名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  \n\n")])])]),a("h4",{attrs:{id:"rm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rm"}},[t._v("#")]),t._v(" rm")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从本地工作区 删除文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("文件名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果本工作区库误删, 想要回退")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("head")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("文件名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  \n")])])]),a("h2",{attrs:{id:"_5-命令行-git-远程仓库操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-命令行-git-远程仓库操作"}},[t._v("#")]),t._v(" 5. 命令行--git 远程仓库操作")]),t._v(" "),a("h3",{attrs:{id:"_5-1-查看远程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-查看远程"}},[t._v("#")]),t._v(" 5.1    查看远程")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看远程  列出指定的每一个远程服务器的简写")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看远程 , 列出 简称和地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote  -v  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看远程仓库详细地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote show  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("仓库简称"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"_5-2-添加-移除远测仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-添加-移除远测仓库"}},[t._v("#")]),t._v(" 5.2 添加/移除远测仓库")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加远程仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("shortname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 移除远程仓库和本地仓库的关系(只是从本地移除远程仓库的关联关系，并不会真正影响到远程仓库)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("shortname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])])]),a("h3",{attrs:{id:"_5-3-从远程仓库获取代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-从远程仓库获取代码"}},[t._v("#")]),t._v(" 5.3 从远程仓库获取代码")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从远程仓库克隆")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从远程仓库拉取 (拉取到.git 目录,不会合并到工作区,工作区发生变化)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("shortname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名称"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 手动合并  把某个版本的某个分支合并到当前工作区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("shortname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名称"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从远程仓库拉取 (拉取到.git 目录,合并到工作区,工作区不发生变化) = fetch+merge")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("shortname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名称"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("shortname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名称"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  --allow-unrelated-histories  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  强制拉取合并")]),t._v("\n")])])]),a("p",[t._v("注意：如果当前本地仓库不是从远程仓库克隆，而是本地创建的仓库，并且仓库中存在文件，此时再从远程仓库拉取文件的时候会报错（fatal: refusing to merge unrelated histories ），解决此问题可以在git pull命令后加入参数--allow-unrelated-histories (如上 命令)")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将本地仓库推送至远程仓库的某个分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote-name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch-name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h2",{attrs:{id:"_6-命令行-分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-命令行-分支"}},[t._v("#")]),t._v(" 6.  命令行-- 分支")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认 分支名称为 master")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有本地分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有远程分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -r\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有本地分支和远程分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -a\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换分支 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除分支(如果分支已经修改过,则不允许删除)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制删除分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -D  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交分支至远程仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("仓库简称"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名称"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\t\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并分支 将其他分支合并至当前工作区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名称"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程仓库分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin –d branchName\n")])])]),a("h2",{attrs:{id:"_7-命令行-tag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-命令行-tag"}},[t._v("#")]),t._v(" 7 . 命令行 --tag")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有tag")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看tag详细信息 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tagName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个tag")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tagName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交指定tag")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("仓库简称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tagName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个分支，指向某个tag")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除本地tag")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程tag (注意 空格)")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin :refs/tags/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),a("p",[t._v("`")])])}),[],!1,null,null,null);s.default=e.exports}}]);