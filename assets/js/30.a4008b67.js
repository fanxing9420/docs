(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{772:function(t,a,e){"use strict";e.r(a);var s=e(45),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"mysql-多表查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql-多表查询"}},[t._v("#")]),t._v(" MySQL—多表查询")]),t._v(" "),e("h3",{attrs:{id:"多表关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多表关系"}},[t._v("#")]),t._v(" 多表关系")]),t._v(" "),e("p",[t._v("项目开发中，在进行数据库表结构设计时，会根据业务需求及业务模块之间的关系，分析并设计表结构，由于业务之间相互关联，所以各个表结构之间也存在着各种联系，基本上分为三种:\n①一对多(多对一)")]),t._v(" "),e("p",[t._v("②多对多")]),t._v(" "),e("p",[t._v("③一对一")]),t._v(" "),e("h5",{attrs:{id:"_1-一对多-多对一"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-一对多-多对一"}},[t._v("#")]),t._v(" 1.一对多（多对一）")]),t._v(" "),e("p",[t._v("​\t案例:部门与员工的关系")]),t._v(" "),e("p",[t._v("​\t关系:一个部门对应多个员工，一个员工对应一个部门\n​\t实现:"),e("strong",[t._v("在多的一方建立外键，指向一的一方的主键")])]),t._v(" "),e("h5",{attrs:{id:"_2-多对多"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-多对多"}},[t._v("#")]),t._v(" 2.多对多")]),t._v(" "),e("p",[t._v("​\t案例:学生与课程的关系\n​\t关系:一个学生可以选修多门课程，一门课程也可以供多个学生选择")]),t._v(" "),e("p",[t._v("​\t实现:"),e("strong",[t._v("建立第三张中间表，中间表至少包含两个外键，分别关联两方主键")])]),t._v(" "),e("h5",{attrs:{id:"_3-一对一"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-一对一"}},[t._v("#")]),t._v(" 3.一对一")]),t._v(" "),e("p",[t._v("案例:用户与用户详情的关系\n关系:一对一关系，多用于单表拆分，将一张表的基础字段放在一张表中，其他详情字段放在另一张表中，以提升操作效率")]),t._v(" "),e("p",[t._v("实现:"),e("strong",[t._v("在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的(UNIQUE)")])]),t._v(" "),e("h3",{attrs:{id:"多表查询-概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多表查询-概述"}},[t._v("#")]),t._v(" 多表查询—概述")]),t._v(" "),e("p",[t._v("1.概述:指从多张表中查询数据\n2.笛卡尔积:笛卡尔乘积是指在数学中，两个集合A集合和B集合的所有组合情况。("),e("strong",[t._v("在多表查询时，需要消除无效的笛卡尔积")]),t._v(")")]),t._v(" "),e("h3",{attrs:{id:"多表查询-分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多表查询-分类"}},[t._v("#")]),t._v(" 多表查询—分类")]),t._v(" "),e("p",[e("strong",[t._v("连接查询")]),t._v(" "),e("strong",[t._v("内连接")]),t._v(":相当于查询A、B交集部分数据\n"),e("strong",[t._v("外连接:")]),t._v("\n左外连接:查询  "),e("u",[t._v("左表")]),t._v("  所有数据，以及两张表交集部分数据\n右外连接:查询  "),e("u",[t._v("右表")]),t._v("  所有数据，以及两张表交集部分数据\n"),e("strong",[t._v("自连接")]),t._v(":当前表与自身的连接查询，自连接必须使用表别名")]),t._v(" "),e("p",[e("strong",[t._v("子查询")])]),t._v(" "),e("h2",{attrs:{id:"多表查询-子查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多表查询-子查询"}},[t._v("#")]),t._v(" 多表查询—子查询")]),t._v(" "),e("h3",{attrs:{id:"子查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#子查询"}},[t._v("#")]),t._v(" 子查询")]),t._v(" "),e("p",[t._v("概念:SQL语句中嵌套SELECT语句，称为嵌套查询，又称子查询。")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("SELECT * FROM t1  WHERE column1=(SELECT column1 FROM t2)；\n")])])]),e("p",[t._v("子查询外部的语句可以是INSERT/ UPDATE/ DELETE/ SELECT的任何一个。\n"),e("strong",[t._v("根据子查询结果不同，分为:")])]),t._v(" "),e("p",[t._v("​\t1.标量子查询（子查询结果为单个值)")]),t._v(" "),e("p",[t._v("​\t2.列子查询(子查询结果为一列)\n​\t3.行子查询(子查询结果为一行)")]),t._v(" "),e("p",[t._v("​\t4.表子查询(子查询结果为多行多列)")]),t._v(" "),e("h3",{attrs:{id:"标量子查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标量子查询"}},[t._v("#")]),t._v(" 标量子查询")]),t._v(" "),e("p",[t._v("子查询返回的结果是单个值（数字、字符串、日期等），最简单的形式，这种子查询称为"),e("strong",[t._v("标量子查询")]),t._v("。")]),t._v(" "),e("p",[t._v("常用的操作符: =\t<>\t>=\t< \t<=    >")]),t._v(" "),e("p",[e("strong",[t._v("例子：")])]),t._v(" "),e("p",[t._v("--标量子查询")]),t._v(" "),e("p",[t._v("--1．查询”销售部”的所有员工信息")]),t._v(" "),e("p",[t._v('​\t\t-- a．查询"销售部”部门ID')]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select id from dept where name =\"销售部';\n")])])]),e("p",[t._v("​\t\t--b.根据销售部部门ID，查询员工信息")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select * from emp where dept_id = (select id from dept where name = ‘销售部');\n")])])]),e("h3",{attrs:{id:"列子查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#列子查询"}},[t._v("#")]),t._v(" 列子查询")]),t._v(" "),e("p",[t._v("子查询返回的结果是一列（可以是多行)，这种子查询称为"),e("strong",[t._v("列子查询")]),t._v("。\n常用的操作符:IN 、NOT IN 、ANY 、SOME、ALL")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("操作符")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("IN")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("在指定的集合范围之内，多选一")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("NOT IN")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("不在指定的集合范围之内")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("ANY")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("子查询返回列表中，有任意一个满足即可")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("SOME")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("与ANY等同，使用SOME的地方都可以使用ANY")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("ALL")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("子查询返回列表的所有值都必须满足")])])])]),t._v(" "),e("h3",{attrs:{id:"行子查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#行子查询"}},[t._v("#")]),t._v(" 行子查询")]),t._v(" "),e("p",[t._v("子查询返回的结果是一行（可以是多列)，这种子查询称为"),e("strong",[t._v("行子查询。")]),t._v("\n常用的操作符:    =   、 <>  、  IN  、  NOT IN")]),t._v(" "),e("p",[e("strong",[t._v("例子：")])]),t._v(" "),e("p",[t._v("--1.查询与“张无忌”的薪资及直属领导相同的员工信息;")]),t._v(" "),e("p",[t._v("​\t\t--a.查询“张无忌”的薪资及直属领导")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select salary,managerid from emp where name = '张无忌\";\n")])])]),e("p",[t._v("​\t\t--b.查询与“张无忌“的薪资及直属领导相同的员工信息;")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select * from emp where (salary ,managerid) = (select salary，managerid from emp where name = '张无忌');\n")])])]),e("h3",{attrs:{id:"表子查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#表子查询"}},[t._v("#")]),t._v(" 表子查询")]),t._v(" "),e("p",[t._v("子查询返回的结果是多行多列，这种子查询称为"),e("strong",[t._v("表子查询。")])]),t._v(" "),e("p",[t._v("常用操作符：IN")]),t._v(" "),e("p",[e("strong",[t._v("例子：")])]),t._v(" "),e("p",[t._v('-- 1.查询与"鹿杖客”，“宋远桥”的职位和薪资相同的员工信息。')]),t._v(" "),e("p",[t._v("​\t\t--a.查询“鹿杖客”，“宋远桥”的职位和薪资")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select job,salary from emp where name = '鹿杖客' or name = '宋远桥';\n")])])]),e("p",[t._v('​\t\t--b.查询与"鹿杖客”，“宋远桥”的职位和薪资相同的员工信息')]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select * from emp where (job, salary) in ( select job,salary from emp where name ='鹿杖客'or name ='宋远桥');\n")])])]),e("p",[t._v('-- 2.查询入职日期是“2006-01-01”之后的员工信息，及其部门信息\n--a.入职日期是"2006-01-01"之后的员工信息')]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select * from enp where entrydate > '2006-01-01';\n")])])]),e("p",[t._v("​\t\t--b.查询这部分员工，对应的部门信息;")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select e.*,d.* from (select * from emp where entrydate > '2006-01-01') e left join dept d on e.dept_id = d.id ;\n")])])]),e("h2",{attrs:{id:"多表查询-内连接外连接自链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多表查询-内连接外连接自链接"}},[t._v("#")]),t._v(" 多表查询—内连接外连接自链接")]),t._v(" "),e("h3",{attrs:{id:"连接查询-内连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接查询-内连接"}},[t._v("#")]),t._v(" 连接查询—内连接")]),t._v(" "),e("h5",{attrs:{id:"内连接查询语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内连接查询语法"}},[t._v("#")]),t._v(" 内连接查询语法：")]),t._v(" "),e("p",[t._v("隐式内连接")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("SELECT 字段列表 FROM 表1，表2 WHERE 条件...；\n")])])]),e("p",[t._v("显式内连接")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("SELECT 字段列表 FROM 表1 [INNER] JOIN 表2 ON 连接条件...；\n")])])]),e("p",[e("strong",[t._v("注意")]),t._v("：")]),t._v(" "),e("p",[t._v("​\t"),e("strong",[t._v("内连接查询的是两张表交集的部分")])]),t._v(" "),e("h3",{attrs:{id:"连接查询-外连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接查询-外连接"}},[t._v("#")]),t._v(" 连接查询—外连接")]),t._v(" "),e("h5",{attrs:{id:"外连接查询语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#外连接查询语法"}},[t._v("#")]),t._v(" 外连接查询语法：")]),t._v(" "),e("p",[t._v("左外连接")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("SELECT 字段列表 FROM  表1 LEFT [OUTER] JOIN 表2 ON 条件...；\n")])])]),e("p",[e("strong",[t._v("相当于查询表1(左表)的所有数据包含表1和表2交集部分的数据")])]),t._v(" "),e("p",[t._v("右外连接")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("SELECT 字段列表 FROM  表1 RIGHT [OUTER] JOIN 表2 ON 条件...；\n")])])]),e("p",[e("strong",[t._v("相当于查询表2(右表)的所有数据包含表1和表2交集部分的数据")])]),t._v(" "),e("h3",{attrs:{id:"连接查询-自链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接查询-自链接"}},[t._v("#")]),t._v(" 连接查询—自链接")]),t._v(" "),e("h5",{attrs:{id:"自连接查询语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自连接查询语法"}},[t._v("#")]),t._v(" 自连接查询语法")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("SELECT 字段列表 FROM 表A 别名A JOIN 表A 别名B ON 条件...；\n")])])]),e("p",[e("strong",[t._v("自连接查询，可以是内连接查询，也可以是外连接查询。")])]),t._v(" "),e("h3",{attrs:{id:"联合查询-union-union-all"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#联合查询-union-union-all"}},[t._v("#")]),t._v(" 联合查询—union，union all")]),t._v(" "),e("p",[t._v("对于union查询，就是把多次查询的结果合并起来，形成一个新的查询结果集。")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("SELECT 字段列表 FROM 表A ...\n\nUNION [ALL]\n\nSELECT 字段列表 FROM 表B...；\n")])])]),e("p",[e("strong",[t._v("注意：")])]),t._v(" "),e("p",[t._v("1.对于联合查询的多张表的列数必须保持一致，字段类型也需要保持一致。\n2.union all会将全部的数据直接合并在一起，union会对合并之后的数据去重。")])])}),[],!1,null,null,null);a.default=r.exports}}]);